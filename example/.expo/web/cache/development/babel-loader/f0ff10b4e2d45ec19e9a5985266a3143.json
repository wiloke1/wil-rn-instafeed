{"ast":null,"code":"import _concat from \"./internal/_concat.js\";\nimport _curry2 from \"./internal/_curry2.js\";\nimport compose from \"./compose.js\";\nimport uniq from \"./uniq.js\";\n\nvar union = _curry2(compose(uniq, _concat));\n\nexport default union;","map":{"version":3,"sources":["/Volumes/Data/REACT_LIB/wil-react-native-mentions/example/node_modules/react-native-input-mentions/node_modules/ramda/es/union.js"],"names":["_concat","_curry2","compose","uniq","union"],"mappings":"AAAA,OAAOA,OAAP;AACA,OAAOC,OAAP;AACA,OAAOC,OAAP;AACA,OAAOC,IAAP;;AAmBA,IAAIC,KAAK,GAETH,OAAO,CAEPC,OAAO,CAACC,IAAD,EAAOH,OAAP,CAFA,CAFP;;AAMA,eAAeI,KAAf","sourcesContent":["import _concat from \"./internal/_concat.js\";\nimport _curry2 from \"./internal/_curry2.js\";\nimport compose from \"./compose.js\";\nimport uniq from \"./uniq.js\";\n/**\n * Combines two lists into a set (i.e. no duplicates) composed of the elements\n * of each list.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig [*] -> [*] -> [*]\n * @param {Array} as The first list.\n * @param {Array} bs The second list.\n * @return {Array} The first and second lists concatenated, with\n *         duplicates removed.\n * @example\n *\n *      R.union([1, 2, 3], [2, 3, 4]); //=> [1, 2, 3, 4]\n */\n\nvar union =\n/*#__PURE__*/\n_curry2(\n/*#__PURE__*/\ncompose(uniq, _concat));\n\nexport default union;"]},"metadata":{},"sourceType":"module"}