{"ast":null,"code":"import _curry1 from \"./internal/_curry1.js\";\nimport _dispatchable from \"./internal/_dispatchable.js\";\nimport _xdropRepeatsWith from \"./internal/_xdropRepeatsWith.js\";\nimport dropRepeatsWith from \"./dropRepeatsWith.js\";\nimport equals from \"./equals.js\";\n\nvar dropRepeats = _curry1(_dispatchable([], _xdropRepeatsWith(equals), dropRepeatsWith(equals)));\n\nexport default dropRepeats;","map":{"version":3,"sources":["/Volumes/Data/REACT_LIB/wil-react-native-mentions/example/node_modules/react-native-input-mentions/node_modules/ramda/es/dropRepeats.js"],"names":["_curry1","_dispatchable","_xdropRepeatsWith","dropRepeatsWith","equals","dropRepeats"],"mappings":"AAAA,OAAOA,OAAP;AACA,OAAOC,aAAP;AACA,OAAOC,iBAAP;AACA,OAAOC,eAAP;AACA,OAAOC,MAAP;;AAoBA,IAAIC,WAAW,GAEfL,OAAO,CAEPC,aAAa,CAAC,EAAD,EAEbC,iBAAiB,CAACE,MAAD,CAFJ,EAIbD,eAAe,CAACC,MAAD,CAJF,CAFN,CAFP;;AAUA,eAAeC,WAAf","sourcesContent":["import _curry1 from \"./internal/_curry1.js\";\nimport _dispatchable from \"./internal/_dispatchable.js\";\nimport _xdropRepeatsWith from \"./internal/_xdropRepeatsWith.js\";\nimport dropRepeatsWith from \"./dropRepeatsWith.js\";\nimport equals from \"./equals.js\";\n/**\n * Returns a new list without any consecutively repeating elements.\n * [`R.equals`](#equals) is used to determine equality.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category List\n * @sig [a] -> [a]\n * @param {Array} list The array to consider.\n * @return {Array} `list` without repeating elements.\n * @see R.transduce\n * @example\n *\n *     R.dropRepeats([1, 1, 1, 2, 3, 4, 4, 2, 2]); //=> [1, 2, 3, 4, 2]\n */\n\nvar dropRepeats =\n/*#__PURE__*/\n_curry1(\n/*#__PURE__*/\n_dispatchable([],\n/*#__PURE__*/\n_xdropRepeatsWith(equals),\n/*#__PURE__*/\ndropRepeatsWith(equals)));\n\nexport default dropRepeats;"]},"metadata":{},"sourceType":"module"}