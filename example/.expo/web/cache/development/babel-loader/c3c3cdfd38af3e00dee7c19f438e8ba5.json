{"ast":null,"code":"import _curry2 from \"./internal/_curry2.js\";\nimport always from \"./always.js\";\nimport times from \"./times.js\";\n\nvar repeat = _curry2(function repeat(value, n) {\n  return times(always(value), n);\n});\n\nexport default repeat;","map":{"version":3,"sources":["/Volumes/Data/REACT_LIB/wil-react-native-mentions/example/node_modules/react-native-input-mentions/node_modules/ramda/es/repeat.js"],"names":["_curry2","always","times","repeat","value","n"],"mappings":"AAAA,OAAOA,OAAP;AACA,OAAOC,MAAP;AACA,OAAOC,KAAP;;AAyBA,IAAIC,MAAM,GAEVH,OAAO,CAAC,SAASG,MAAT,CAAgBC,KAAhB,EAAuBC,CAAvB,EAA0B;AAChC,SAAOH,KAAK,CAACD,MAAM,CAACG,KAAD,CAAP,EAAgBC,CAAhB,CAAZ;AACD,CAFM,CAFP;;AAMA,eAAeF,MAAf","sourcesContent":["import _curry2 from \"./internal/_curry2.js\";\nimport always from \"./always.js\";\nimport times from \"./times.js\";\n/**\n * Returns a fixed list of size `n` containing a specified identical value.\n *\n * @func\n * @memberOf R\n * @since v0.1.1\n * @category List\n * @sig a -> n -> [a]\n * @param {*} value The value to repeat.\n * @param {Number} n The desired size of the output list.\n * @return {Array} A new array containing `n` `value`s.\n * @see R.times\n * @example\n *\n *      R.repeat('hi', 5); //=> ['hi', 'hi', 'hi', 'hi', 'hi']\n *\n *      const obj = {};\n *      const repeatedObjs = R.repeat(obj, 5); //=> [{}, {}, {}, {}, {}]\n *      repeatedObjs[0] === repeatedObjs[1]; //=> true\n * @symb R.repeat(a, 0) = []\n * @symb R.repeat(a, 1) = [a]\n * @symb R.repeat(a, 2) = [a, a]\n */\n\nvar repeat =\n/*#__PURE__*/\n_curry2(function repeat(value, n) {\n  return times(always(value), n);\n});\n\nexport default repeat;"]},"metadata":{},"sourceType":"module"}